% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertions.R
\name{assertions}
\alias{assertions}
\alias{imp_assert_scalar_int}
\alias{imp_assert_scalar_dbl}
\alias{imp_assert_scalar_num}
\alias{imp_assert_scalar_lgl}
\alias{imp_assert_bool}
\alias{imp_assert_scalar_chr}
\alias{imp_assert_string}
\title{Function input assertions}
\usage{
imp_assert_scalar_int(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_dbl(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_num(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_lgl(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_bool(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_chr(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_string(x, arg = deparse(substitute(x)), call = sys.call(-1L))
}
\arguments{
\item{x}{Argument to check.}

\item{arg}{Name of argument being checked (used in error message).}

\item{call}{Call to use in error message.}
}
\value{
The input argument (invisibly) if the assertion succeeds (will error
otherwise).
}
\description{
Minimal overhead assertions for checking. Motivated by \code{vctrs::vec_assert()}
but with lower overhead at a cost of less informative error messaging.
}
\examples{
a <- "apple"
i <- 1L
d <- 1.0
l <- NA

imp_assert_scalar_int(i)
try(imp_assert_scalar_int(a))

imp_assert_scalar_dbl(d)
try(imp_assert_scalar_dbl(i))

imp_assert_scalar_num(i)
imp_assert_scalar_num(d)
try(imp_assert_scalar_num(a))

imp_assert_scalar_lgl(l)
try(imp_assert_scalar_lgl(a))

imp_assert_bool(TRUE)
try(imp_assert_bool(NA))

imp_assert_scalar_chr(a)
try(imp_assert_scalar_chr(letters))

imp_assert_string(a)
try(imp_assert_string(letters))

}
