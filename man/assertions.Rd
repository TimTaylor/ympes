% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertions.R
\name{assertions}
\alias{assertions}
\alias{imp_assert_scalar_int}
\alias{imp_assert_scalar_dbl}
\alias{imp_assert_scalar_num}
\alias{imp_assert_scalar_lgl}
\alias{imp_assert_bool}
\alias{imp_assert_scalar_chr}
\alias{imp_assert_string}
\alias{imp_assert_data_frame}
\alias{imp_assert_list}
\title{Function input assertions}
\usage{
imp_assert_scalar_int(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_dbl(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_num(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_lgl(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_bool(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_scalar_chr(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_string(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_data_frame(x, arg = deparse(substitute(x)), call = sys.call(-1L))

imp_assert_list(x, arg = deparse(substitute(x)), call = sys.call(-1L))
}
\arguments{
\item{x}{Argument to check.}

\item{arg}{Name of argument being checked (used in error message).}

\item{call}{Call to use in error message.}
}
\value{
The input argument (invisibly) if the assertion succeeds (will error
otherwise).
}
\description{
Minimal overhead assertions for checking. Motivated by \code{vctrs::vec_assert()}
but with lower overhead at a cost of less informative error messages.
}
\examples{

# Use in a user facing function
fun <- function(i, d, l, chr, b) {
    imp_assert_scalar_int(i)
    imp_assert_scalar_dbl(d)
    imp_assert_scalar_lgl(l)
    imp_assert_string(chr)
    imp_assert_bool(b)
    TRUE
}
fun(i=1L, d=1, l=NA, chr="cat", b=TRUE)
try(fun(d=1, l=NA, chr="cat", b=TRUE))
try(fun(i=1L, d=1, l=NA, chr=letters))

# Use in an internal function
internal_fun <- function(i, d, l, chr, b) {
    imp_assert_scalar_int(i, arg = deparse(substitute(i)), call = sys.call(-1L))
    imp_assert_scalar_dbl(d, arg = deparse(substitute(d)), call = sys.call(-1L))
    imp_assert_scalar_lgl(l, arg = deparse(substitute(l)), call = sys.call(-1L))
    imp_assert_string(chr, arg = deparse(substitute(chr)), call = sys.call(-1L))
    imp_assert_bool(b, arg = deparse(substitute(b)), call = sys.call(-1L))
    TRUE
}
external_fun <- function(ii, dd, ll, chrchr, bb) {
    internal_fun(i=ii, d=dd, l=ll, chr=chrchr,b=bb)
}
external_fun(ii=1L, dd=1, ll=NA, chrchr="cat", bb=TRUE)
try(external_fun(dd=1, ll=NA, chrchr="cat", bb=TRUE))
try(external_fun(ii=1L, dd=1, ll=NA, chrchr=letters, bb=TRUE))

}
